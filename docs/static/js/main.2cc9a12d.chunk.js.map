{"version":3,"sources":["image/fleshmonk.png","components/List_Words.jsx","components/Word_Audio.jsx","data/WorldList.jsx","components/App_Main.jsx","components/App_Header.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","List_Words","props","letterContainer","letter","list","wordList","addWord","className","map","word","index","toLowerCase","key","onClick","bind","letters","value","React","Component","Word_Audio","this","controls","id","src","audioData","WordList","data","App_Main","generateFromOrigin","query","getQuery","split","audioPaths","i","length","queryPath","pair","push","setState","isLoaded","generated","document","getElementById","classList","remove","generateFromAPI","fetch","API_ADDRESS","then","res","json","result","state","error","req_input","trim","console","log","clearInput","add","sounds","getElementsByClassName","pause","playAudio","pairs","players","ids","Object","keys","setAttribute","getNext","play","prefix","copyShare","shared_input","shared_notice","replace","window","location","href","select","setSelectionRange","execCommand","setTimeout","clips","search","URLSearchParams","get","getWordListFromOrigin","util","require","inspect","maxArrayLength","aria-hidden","type","placeholder","fleshmonk","alt","App_Header","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,uC,kQCqD5BC,G,mBAhDd,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KAsBPC,gBAAkB,SAACC,GAClB,IAAMC,EAAO,EAAKH,MAAMI,SAClBC,EAAU,EAAKL,MAAMK,QAC3B,OAAW,MAARF,EAED,yBAAKG,UAAU,mBACd,4BAAKJ,GACL,4BAEEC,EAAKI,KAAI,SAACC,EAAMC,GAEf,OADYD,EAAK,GAAGE,gBACPR,EACF,wBAAIS,IAAK,MAAQH,GAAO,4BAAQI,QAASP,EAAQQ,KAAR,eAAmBL,IAAQA,IAExE,eAOZ,GA5CiB,E,sEAIV,IAAD,OAEDM,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE9I,OACC,yBAAKR,UAAU,YACd,+CAEA,yBAAKA,UAAU,QAEbQ,EAAQP,KAAI,SAACQ,EAAON,GACnB,OAAO,EAAKR,gBAAgBc,EAAOD,Y,GAjBjBE,IAAMC,YCsBfC,E,YApBf,WAAYlB,GAAQ,qEACbA,I,sEAKN,OACC,6BACC,2BAAImB,KAAKnB,MAAMQ,MACf,2BACCY,UAAQ,EACRC,GAAI,SAAWF,KAAKnB,MAAMQ,KAAO,IAAMW,KAAKnB,MAAMS,MAClDa,IAAKH,KAAKnB,MAAMuB,UAChBjB,UAAU,eAJX,oCAME,uCANF,kB,GAZqBU,IAAMC,WCFVO,E,sCAEjBC,KAAO,CAAE,IACT,MACA,SACA,UACA,QACA,SACA,SACA,aACA,OACA,KACA,WACA,MACA,QACA,MACA,UACA,WACA,KACA,MACA,OACA,MACA,OACA,QACA,KACA,SACA,UACA,UACA,OACA,YACA,UACA,SACA,UACA,QACA,eACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,OACA,YACA,MACA,OACA,UACA,QACA,OACA,UACA,SACA,KACA,OACA,YACA,UACA,OACA,OACA,YACA,UACA,OACA,QACA,QACA,UACA,SACA,SACA,aACA,UACA,OACA,OACA,SACA,QACA,SACA,QACA,UACA,UACA,QACA,MACA,UACA,MACA,YACA,UACA,KACA,OACA,QACA,OACA,OACA,OACA,QACA,UACA,OACA,OACA,OACA,WACA,SACA,SACA,eACA,WACA,aACA,UACA,SACA,WACA,UACA,OACA,OACA,QACA,OACA,QACA,QACA,YACA,SACA,OACA,QACA,SACA,OACA,MACA,SACA,QACA,OACA,OACA,UACA,MACA,OACA,WACA,OACA,MACA,MACA,WACA,QACA,MACA,QACA,WACA,YACA,WACA,UACA,OACA,MACA,OACA,KACA,UACA,OACA,OACA,MACA,MACA,OACA,YACA,OACA,QACA,MACA,IACA,MACA,cACA,UACA,KACA,QACA,SACA,UACA,OACA,WACA,UACA,OACA,UACA,OACA,QACA,SACA,MACA,aACA,QACA,SACA,OACA,SACA,OACA,QACA,OACA,QACA,OACA,aACA,OACA,MACA,eACA,KACA,UACA,WACA,MACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,KACA,MACA,SACA,WACA,KACA,OACA,OACA,UACA,iBACA,OACA,OACA,SACA,aACA,UACA,QACA,SACA,QACA,UACA,QACA,MACA,SACA,YACA,UACA,SACA,SACA,QACA,IACA,OACA,QACA,MACA,SACA,QACA,MACA,OACA,SACA,OACA,QACA,WACA,gBACA,SACA,WACA,KACA,OACA,aACA,UACA,QACA,OACA,YACA,QACA,WACA,UACA,OACA,cACA,WACA,QACA,UACA,SACA,QACA,SACA,aACA,OACA,UACA,MACA,OACA,MACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,WACA,OACA,KACA,SACA,QACA,WACA,QACA,SACA,QACA,SACA,KACA,UACA,KACA,QACA,SACA,cACA,KACA,UACA,KACA,UACA,OACA,UACA,OACA,MACA,OACA,QACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,QACA,KACA,QCrCWC,E,YA3Pd,WAAY1B,GAAQ,IAAD,8BAClB,4CAAMA,KA6HP2B,mB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","file":"static/js/main.2cc9a12d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fleshmonk.bdd75fa5.png\";","import React from 'react';\r\nimport '../scss/wordList.scss';\r\n\r\nclass List_Words extends React.Component  {\r\n\t\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\t\r\n\t}\r\n\t\r\n\trender(){\r\n\t\t\r\n\t\tconst letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"wordList\">\r\n\t\t\t\t<h2>available words</h2>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tletters.map((value, index) => {\r\n\t\t\t\t\t\t\treturn this.letterContainer(value, letters);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\tletterContainer = (letter) =>{\t\t\r\n\t\tconst list = this.props.wordList;\r\n\t\tconst addWord = this.props.addWord;\r\n\t\tif(list != null){\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"letterContainer\">\r\n\t\t\t\t\t<h3>{letter}</h3>\t\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlist.map((word, index) =>{\r\n\t\t\t\t\t\t\t\tlet start = word[0].toLowerCase();\r\n\t\t\t\t\t\t\t\tif(start === letter){\r\n\t\t\t\t\t\t\t\t   return (<li key={\"li_\" + word} ><button onClick={addWord.bind(this, word)}>{word}</button></li>)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}else{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\nexport default List_Words;","import React from 'react';\r\n\r\nclass Word_Audio extends React.Component  {\r\n\t\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\t\r\n\t}\r\n\t\r\n\trender(){\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<p>{this.props.word}</p>\r\n\t\t\t\t<audio\r\n\t\t\t\t\tcontrols\r\n\t\t\t\t\tid={\"audio_\" + this.props.word + \"_\" + this.props.index} \r\n\t\t\t\t\tsrc={this.props.audioData}\r\n\t\t\t\t\tclassName=\"audioPlayer\" >\r\n\t\t\t\t\t Your browser does not support the\r\n\t\t\t\t\t <code>audio</code> element.\r\n\t\t\t\t</audio>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}export default Word_Audio;","export default class WordList {\r\n\r\n    data = [ 'a',\r\n    'abs',\r\n    'action',\r\n    'affairs',\r\n    'agree',\r\n    'ai_yah',\r\n    'aliens',\r\n    'all_around',\r\n    'also',\r\n    'am',\r\n    'american',\r\n    'and',\r\n    'anime',\r\n    'ape',\r\n    'applies',\r\n    'aquarium',\r\n    'ar',\r\n    'are',\r\n    'army',\r\n    'art',\r\n    'arts',\r\n    'asian',\r\n    'at',\r\n    'attack',\r\n    'attacks',\r\n    'awesome',\r\n    'back',\r\n    'basically',\r\n    'because',\r\n    'before',\r\n    'bending',\r\n    'berry',\r\n    'best_friends',\r\n    'bit',\r\n    'black',\r\n    'blends',\r\n    'block',\r\n    'blocks',\r\n    'boilded',\r\n    'boom',\r\n    'both',\r\n    'branching',\r\n    'bro',\r\n    'bugs',\r\n    'bullets',\r\n    'bunch',\r\n    'bust',\r\n    'busters',\r\n    'button',\r\n    'by',\r\n    'cans',\r\n    'cantonese',\r\n    'carries',\r\n    'cast',\r\n    'cave',\r\n    'character',\r\n    'chinese',\r\n    'city',\r\n    'clear',\r\n    'close',\r\n    'collect',\r\n    'combat',\r\n    'combos',\r\n    'commercial',\r\n    'content',\r\n    'cool',\r\n    'cops',\r\n    'county',\r\n    'cover',\r\n    'cradle',\r\n    'crazy',\r\n    'created',\r\n    'creates',\r\n    'crime',\r\n    'cry',\r\n    'culture',\r\n    'dad',\r\n    'different',\r\n    'dislike',\r\n    'do',\r\n    'dogs',\r\n    'don\\'t',\r\n    'dong',\r\n    'dont',\r\n    'dope',\r\n    'drama',\r\n    'driving',\r\n    'dude',\r\n    'dump',\r\n    'easy',\r\n    'elements',\r\n    'enough',\r\n    'entire',\r\n    'enviromental',\r\n    'escaping',\r\n    'everything',\r\n    'excited',\r\n    'expect',\r\n    'expected',\r\n    'explore',\r\n    'fans',\r\n    'feel',\r\n    'fight',\r\n    'fish',\r\n    'flash',\r\n    'flesh',\r\n    'fleshmonk',\r\n    'fleshy',\r\n    'flow',\r\n    'focus',\r\n    'follow',\r\n    'food',\r\n    'for',\r\n    'format',\r\n    'fresh',\r\n    'from',\r\n    'fuck',\r\n    'fucking',\r\n    'fun',\r\n    'game',\r\n    'gangster',\r\n    'gawd',\r\n    'gay',\r\n    'get',\r\n    'get_good',\r\n    'glace',\r\n    'got',\r\n    'grade',\r\n    'graphics',\r\n    'greetings',\r\n    'grinding',\r\n    'growing',\r\n    'guns',\r\n    'gut',\r\n    'hard',\r\n    'he',\r\n    'healthy',\r\n    'hell',\r\n    'help',\r\n    'hey',\r\n    'his',\r\n    'hong',\r\n    'hong_kong',\r\n    'huge',\r\n    'hydra',\r\n    'i\\'m',\r\n    'i',\r\n    'ing',\r\n    'ingredients',\r\n    'instead',\r\n    'is',\r\n    'japan',\r\n    'jiggle',\r\n    'jiggles',\r\n    'just',\r\n    'killzone',\r\n    'kissing',\r\n    'kong',\r\n    'kung_fu',\r\n    'lard',\r\n    'large',\r\n    'larger',\r\n    'let',\r\n    'lie_to_you',\r\n    'light',\r\n    'lights',\r\n    'like',\r\n    'little',\r\n    'loki',\r\n    'loops',\r\n    'love',\r\n    'lower',\r\n    'made',\r\n    'magnetized',\r\n    'make',\r\n    'man',\r\n    'martial_arts',\r\n    'me',\r\n    'mission',\r\n    'missions',\r\n    'mom',\r\n    'most',\r\n    'movies',\r\n    'murder',\r\n    'music',\r\n    'must',\r\n    'myself',\r\n    'neon',\r\n    'no',\r\n    'now',\r\n    'object',\r\n    'offering',\r\n    'ok',\r\n    'okay',\r\n    'once',\r\n    'outside',\r\n    'overcompensate',\r\n    'pass',\r\n    'past',\r\n    'people',\r\n    'plagiarism',\r\n    'playing',\r\n    'point',\r\n    'police',\r\n    'power',\r\n    'present',\r\n    'punch',\r\n    'put',\r\n    'really',\r\n    'recommend',\r\n    'require',\r\n    'retire',\r\n    'rocket',\r\n    'rules',\r\n    's',\r\n    'safe',\r\n    'sauce',\r\n    'say',\r\n    'school',\r\n    'seats',\r\n    'see',\r\n    'sick',\r\n    'sickly',\r\n    'sing',\r\n    'sleep',\r\n    'sleeping',\r\n    'sleeping_dogs',\r\n    'slowmo',\r\n    'smashing',\r\n    'so',\r\n    'soap',\r\n    'soap_opera',\r\n    'soldier',\r\n    'solid',\r\n    'some',\r\n    'soy_sauce',\r\n    'space',\r\n    'speakers',\r\n    'statues',\r\n    'stay',\r\n    'stay_fleshy',\r\n    'steroids',\r\n    'still',\r\n    'stories',\r\n    'street',\r\n    'stuff',\r\n    'styles',\r\n    'surrounded',\r\n    'take',\r\n    'talking',\r\n    'ten',\r\n    'that',\r\n    'the',\r\n    'them',\r\n    'there',\r\n    'these',\r\n    'thing',\r\n    'things',\r\n    'tight',\r\n    'time',\r\n    'timeline',\r\n    'tire',\r\n    'to',\r\n    'toally',\r\n    'today',\r\n    'together',\r\n    'trash',\r\n    'travel',\r\n    'triad',\r\n    'triads',\r\n    'tv',\r\n    'twitter',\r\n    'uh',\r\n    'under',\r\n    'unlike',\r\n    'unrealistic',\r\n    'up',\r\n    'upgrade',\r\n    've',\r\n    'version',\r\n    'very',\r\n    'viewers',\r\n    'want',\r\n    'was',\r\n    'wash',\r\n    'watch',\r\n    'whats_up',\r\n    'while',\r\n    'white',\r\n    'why',\r\n    'wild',\r\n    'with',\r\n    'wonder',\r\n    'wonderful',\r\n    'worth',\r\n    'xp',\r\n    'you' ];\r\n}","import React from 'react';\r\nimport '../scss/App.scss';\r\nimport fleshmonk from '../image/fleshmonk.png';\r\nimport List_Words from './List_Words.jsx';\r\nimport Word_Audio from './Word_Audio.jsx'\r\nimport WordList from '../data/WorldList.jsx';\r\nvar state = {}\r\n\r\nclass App_Main extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.API_ADDRESS = \"https://fleshmonk.johnsonlu.dev/\";\r\n\t\tthis.state = {\r\n\t\t\terror: null,\r\n\t\t\tisLoaded: false,\r\n\t\t\tclips: [],\r\n\t\t\tgenerated: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tlet search = window.location.search;\r\n\t\tlet params = new URLSearchParams(search);\r\n\t\tlet query = params.get('q');\r\n\t\tconsole.log(query);\r\n\t\tif (query != null && query != \" \" && query != \"\") {\r\n\t\t\tlet req_input = document.getElementById(\"req_input\");\r\n\t\t\tquery = query.replace(/,/g, ' ');\r\n\t\t\treq_input.value = query;\r\n\t\t\tthis.generateFromOrigin();\r\n\t\t}\r\n\r\n\t\tthis.getWordListFromOrigin()\r\n\t}\r\n\r\n\tgetWordListFromOrigin() {\r\n\t\tlet wordList = new WordList();\r\n\t\tthis.setState({\r\n\t\t\tisLoaded: true,\r\n\t\t\tclips: wordList.data\r\n\t\t});\r\n\t}\r\n\r\n\tgetWordListFromAPI() {\r\n\t\tfetch(this.API_ADDRESS + \"getWordList\")\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisLoaded: true,\r\n\t\t\t\t\t\tclips: result.list\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisLoaded: true,\r\n\t\t\t\t\t\terror\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t}\r\n\r\n\tprintWorldList() {\r\n\t\tconst util = require('util')\r\n\t\tconsole.log(util.inspect(this.state.clips, { maxArrayLength: null }))\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { error, isLoaded, clips } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<main className=\"\">\r\n\t\t\t\t<p className=\"desc\">\r\n\t\t\t\t\tFleshmonk Sound Board. Compile sounds from the YouTuber <a href=\"https://www.youtube.com/user/MrWilkins88\">Fleshmonk</a> and generate your own voice clips! In the future, maybe support for auto generated voice with machine learning.\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<strong> Currently you can only use the words that are available below. Clicking on the words is strongly recommended</strong>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\terror != null ?\r\n\t\t\t\t\t\t(<div className=\"ErrorMsg\">Error -- Could not connect to server</div>)\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t(<div></div>)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div id=\"audioContainer\" className=\"hide\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.generated != null ? (\r\n\t\t\t\t\t\t\t<button onClick={this.playAudio.bind(this, this.state.generated)}>Play <i className=\"fas fa-play\" aria-hidden=\"true\"></i><span className=\"scr_rd\"></span></button>\r\n\t\t\t\t\t\t) : (null)\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.generated != null ?\r\n\t\t\t\t\t\t\t\t(this.state.generated.map((pair, index) => (\r\n\t\t\t\t\t\t\t\t\t<Word_Audio key={index} index={index} word={Object.keys(pair)[0]} audioData={pair[Object.keys(pair)[0]]} />\r\n\t\t\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t(null)\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.generated != null ? (\r\n\t\t\t\t\t\t\t<span id=\"shareLink\">\r\n\t\t\t\t\t\t\t\t<button className=\"share_btn\" onClick={this.copyShare}><i aria-hidden=\"true\" className=\"fas fa-link\"></i></button>\r\n\t\t\t\t\t\t\t\t<div id=\"shared_Notice\" className=\"hide\">Share Link Copied!</div>\r\n\t\t\t\t\t\t\t\t<input id=\"shared_Input\" className=\"scr_rd\" type=\"text\" ></input>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t) : (null)\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"req_container\">\r\n\t\t\t\t\t<input id=\"req_input\" type=\"text\" placeholder=\"Stay Fleshy...\" />\r\n\t\t\t\t\t<button id=\"clear_input\" onClick={this.clearInput}>X</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button id=\"req_generate\" onClick={this.generateFromOrigin}>\r\n\t\t\t\t\tgenerate\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<div id=\"fleshmonk_container\">\r\n\t\t\t\t\t<img id=\"fleshmonk_logo\" src={fleshmonk} alt=\"fleshmonk logo\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<List_Words wordList={clips} addWord={this.addWord}></List_Words>\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n\r\n\tgenerateFromOrigin = () => {\r\n\t\tlet query = this.getQuery().split(\" \");\r\n\t\tlet audioPath = \"./sounds/\";\r\n\t\tlet extension = \".wav\";\r\n\t\tlet audioPaths = [];\r\n\r\n\t\tfor(let i = 0; i < query.length; i++){\r\n\t\t\tlet queryPath =  audioPath + query[i] + extension;\r\n\t\t\tlet word = query[i];\r\n\t\t\tlet pair = {};\r\n\t\t\tpair[word] = queryPath;\r\n\t\t\taudioPaths.push(pair);\r\n\t\t}\r\n\r\n\t\tif(audioPaths != []){\r\n\t\t\tthis.setState({\r\n\t\t\t\tisLoaded: true,\r\n\t\t\t\tgenerated: audioPaths\r\n\t\t\t});\r\n\r\n\t\t\tlet audioContainer = document.getElementById(\"audioContainer\");\r\n\t\t\taudioContainer.classList.remove('hide');\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tgenerateFromAPI = () => {\r\n\t\tlet query = this.getQuery();\r\n\t\tfetch(this.API_ADDRESS + \"generate/\" + query)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisLoaded: true,\r\n\t\t\t\t\t\tgenerated: result.data\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (this.state.generated != null) {\r\n\t\t\t\t\t\tlet audioContainer = document.getElementById(\"audioContainer\");\r\n\t\t\t\t\t\taudioContainer.classList.remove('hide');\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tisLoaded: true,\r\n\t\t\t\t\t\terror\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tgetQuery = () => {\r\n\t\tlet req_input = document.getElementById(\"req_input\");\r\n\t\tif (req_input != null) {\r\n\t\t\tlet query = req_input.value.toLowerCase();\r\n\t\t\tquery = query.trim();\r\n\t\t\treturn query;\r\n\t\t}\r\n\t}\r\n\r\n\taddWord = (word) => {\r\n\t\tconsole.log(\"add \" + word);\r\n\t\tlet req_input = document.getElementById(\"req_input\");\r\n\t\treq_input.value = req_input.value + \" \" + word;\r\n\t\treturn;\r\n\t}\r\n\r\n\tclearInput = () => {\r\n\t\tlet req_input = document.getElementById(\"req_input\");\r\n\t\treq_input.value = \"\";\r\n\t\tlet audioContainer = document.getElementById(\"audioContainer\");\r\n\t\taudioContainer.classList.add('hide');\r\n\r\n\t\tlet sounds = document.getElementsByClassName('audioPlayer');\r\n\t\tfor (let i = 0; i < sounds.length; i++) {\r\n\t\t\tsounds[i].pause();\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tplayAudio = (pairs) => {\r\n\t\tlet players = []\r\n\t\tlet ids = []\r\n\t\tfor (let i = 0; i < pairs.length; i++) {\r\n\t\t\t//audio_\" + this.props.word + \"_\" + this.props.index\r\n\t\t\tplayers.push(document.getElementById(\"audio_\" + Object.keys(pairs[i])[0] + \"_\" + i));\r\n\t\t\tids.push(\"audio_\" + Object.keys(pairs[i])[0] + \"_\" + i);\r\n\t\t}\r\n\r\n\r\n\t\tfor (let i = 0; i < ids.length; i++) {\r\n\t\t\tif (i + 1 < ids.length) {\r\n\t\t\t\tplayers[i].setAttribute(\"onEnded\", this.getNext(ids[i + 1]));\r\n\t\t\t}\r\n\t\t}\r\n\t\tplayers[0].play();\r\n\t}\r\n\r\n\tgetNext = (id) => {\r\n\t\tlet prefix = \"setTimeout(function(){ \";\r\n\t\tlet getEleStr = \"document.getElementById(\\\"\"\r\n\t\tlet postfix = \"\\\").play(); }, 25);\"\r\n\t\treturn prefix + getEleStr + id + postfix;\r\n\t}\r\n\r\n\tcopyShare = () => {\r\n\t\tlet req_input = document.getElementById(\"req_input\");\r\n\t\tlet shared_input = document.getElementById(\"shared_Input\");\r\n\t\tlet shared_notice = document.getElementById(\"shared_Notice\");\r\n\t\tlet query = req_input.value;\r\n\t\tquery = query.replace(/ /g, ',');\r\n\r\n\t\tquery = window.location.href.split('?')[0] + \"?q=\" + query;\r\n\t\tshared_input.value = query;\r\n\t\tshared_input.select();\r\n\t\tshared_input.setSelectionRange(0, 99999); /*For mobile devices*/\r\n\t\tdocument.execCommand(\"copy\")\r\n\t\tshared_notice.classList.remove(\"hide\");\r\n\t\tshared_notice.classList.add(\"ani\");\r\n\t\tsetTimeout(function () { shared_notice.classList.add(\"hide\");; }, 3000);\r\n\t}\r\n}\r\nexport default App_Main;\r\n","import React from 'react';\r\nimport '../scss/App.scss';\r\n\r\nvar state = {}\r\n\r\nclass App_Header extends React.Component {\r\n  \r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<header>\r\n\t\t\t\t<h1>fleshmonk sound board</h1>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App_Header;\r\n","import React from 'react';\nimport '../scss/App.scss';\nimport App_Main from './App_Main.jsx';\nimport App_Header from './App_Header.jsx';\n\nvar state = {}\n\nclass App extends React.Component {\n  \n\trender(){\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<App_Header/>\n\t\t\t\t<App_Main/>\n\t\t\t\t\n\t\t\t\t<footer>\n\t\t\t\t\t<img src=\"https://cdn4.iconfinder.com/data/icons/logos-3/600/React.js_logo-512.png\" alt=\"react logo\"/>\n\t\t\t\t\t<p>Made by Johnson Lu with React.js</p>\t\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}