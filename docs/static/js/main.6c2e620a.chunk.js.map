{"version":3,"sources":["image/fleshmonk.png","media/example/speakers.wav","components/List_Words.jsx","components/Word_Audio.jsx","components/App_Main.jsx","components/App_Header.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","List_Words","props","letterContainer","letter","list","wordList","addWord","className","map","word","index","toLowerCase","key","onClick","bind","letters","value","React","Component","Word_Audio","this","controls","id","src","audioData","App_Main","generate","query","getQuery","fetch","API_ADDRESS","then","res","json","result","setState","isLoaded","generated","data","state","document","getElementById","classList","remove","error","req_input","trim","console","log","clearInput","add","sounds","getElementsByClassName","i","length","pause","playAudio","pairs","players","ids","push","Object","keys","setAttribute","getNext","play","prefix","copyShare","shared_input","shared_notice","replace","window","location","href","split","select","setSelectionRange","execCommand","setTimeout","clips","search","URLSearchParams","get","aria-hidden","pair","type","placeholder","fleshmonk","alt","App_Header","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c2e620a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fleshmonk.bdd75fa5.png\";","module.exports = __webpack_public_path__ + \"static/media/speakers.bf35eb6e.wav\";","import React from 'react';\r\nimport '../scss/wordList.scss';\r\n\r\nclass List_Words extends React.Component  {\r\n\t\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\t\r\n\t}\r\n\t\r\n\trender(){\r\n\t\t\r\n\t\tconst letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"wordList\">\r\n\t\t\t\t<h2>available words</h2>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tletters.map((value, index) => {\r\n\t\t\t\t\t\t\treturn this.letterContainer(value, letters);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\tletterContainer = (letter) =>{\t\t\r\n\t\tconst list = this.props.wordList;\r\n\t\tconst addWord = this.props.addWord;\r\n\t\tif(list != null){\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"letterContainer\">\r\n\t\t\t\t\t<h3>{letter}</h3>\t\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlist.map((word, index) =>{\r\n\t\t\t\t\t\t\t\tlet start = word[0].toLowerCase();\r\n\t\t\t\t\t\t\t\tif(start === letter){\r\n\t\t\t\t\t\t\t\t   return (<li key={\"li_\" + word} ><button onClick={addWord.bind(this, word)}>{word}</button></li>)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}else{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\nexport default List_Words;","import React from 'react';\r\n\r\nclass Word_Audio extends React.Component  {\r\n\t\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\t\r\n\t}\r\n\t\r\n\trender(){\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<p>{this.props.word}</p>\r\n\t\t\t\t<audio\r\n\t\t\t\t\tcontrols\r\n\t\t\t\t\tid={\"audio_\" + this.props.word + \"_\" + this.props.index} \r\n\t\t\t\t\tsrc={\"data:audio/wav;base64,\" + this.props.audioData}\r\n\t\t\t\t\tclassName=\"audioPlayer\" >\r\n\t\t\t\t\t Your browser does not support the\r\n\t\t\t\t\t <code>audio</code> element.\r\n\t\t\t\t</audio>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}export default Word_Audio;","import React from 'react';\r\nimport $ from 'jquery';\r\nimport toWav from 'audiobuffer-to-wav';\r\nimport '../scss/App.scss';\r\nimport fleshmonk from '../image/fleshmonk.png';\r\nimport testAudio from '../media/example/speakers.wav';\r\nimport List_Words from './List_Words.jsx';\r\nimport Word_Audio from './Word_Audio.jsx'\r\n\r\nvar state = {}\r\n\r\nclass App_Main extends React.Component {\r\n  \t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.API_ADDRESS = \"https://fleshmonk.johnsonlu.dev/\";\r\n\t\tthis.state = {\r\n\t\t  \terror: null,\r\n\t\t  \tisLoaded: false,\r\n\t\t  \tclips: [],\r\n\t\t\tgenerated: []\r\n\t\t};\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\tlet search = window.location.search;\r\n\t\tlet params = new URLSearchParams(search);\r\n\t\tlet query = params.get('q');\r\n\t\tconsole.log(query);\r\n\t\tif(query != null && query != \" \" && query != \"\"){\r\n\t\t   \tlet req_input = document.getElementById(\"req_input\");\r\n\t\t\tquery = query.replace(/,/g,' ');\r\n\t\t\treq_input.value = query;\r\n\t\t\tthis.generate();\r\n\t\t}\r\n\t\t\r\n\t\tfetch( this.API_ADDRESS + \"getWordList\")\r\n\t\t  .then(res => res.json())\r\n\t\t  .then(\r\n\t\t\t(result) => {\r\n\t\t\t  this.setState({\r\n\t\t\t\tisLoaded: true,\r\n\t\t\t\tclips: result.list\r\n\t\t\t  });\t\t\t\t\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t  this.setState({\r\n\t\t\t\tisLoaded: true,\r\n\t\t\t\terror\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  )\r\n\t}\r\n\t\r\n\trender(){\r\n\t\t\r\n\t\tconst { error, isLoaded, clips } = this.state;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<main className=\"\">\r\n\t\t\t\t<p className=\"desc\">\r\n\t\t\t\t\tFleshmonk Sound Board. Compile sounds from the YouTuber <a href=\"https://www.youtube.com/user/MrWilkins88\">Fleshmonk</a> and generate your own voice clips! In the future, maybe support for auto generated voice with machine learning. \r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<strong> Currently you can only use the words that are available below. Clicking on the words is strongly recommended</strong>\r\n\t\t\t\t</p>\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\terror != null ? \r\n\t\t\t\t\t\t(<div className=\"ErrorMsg\">Error -- Could not connect to server</div>)\r\n\t\t\t\t\t:\r\n\t\t\t\t\t\t(<div></div>)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<div id=\"audioContainer\" className=\"hide\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.generated != null ? (\r\n\t\t\t\t\t\t\t<button onClick={this.playAudio.bind(this, this.state.generated)}>Play <i className=\"fas fa-play\" aria-hidden=\"true\"></i><span className=\"scr_rd\"></span></button>\r\n\t\t\t\t\t\t) : (null)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.generated != null ?\r\n\t\t\t\t\t\t\t\t( this.state.generated.map((pair, index) => ( \r\n\t\t\t\t\t\t\t\t\t<Word_Audio key={index} index={index} word={Object.keys(pair)[0]} audioData={pair[Object.keys(pair)[0]]}/>\r\n\t\t\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t(null)\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.generated != null ? (\r\n\t\t\t\t\t\t\t<span id=\"shareLink\">\r\n\t\t\t\t\t\t\t\t<button className=\"share_btn\" onClick={this.copyShare}><i aria-hidden=\"true\" className=\"fas fa-link\"></i></button>\r\n\t\t\t\t\t\t\t\t<div id=\"shared_Notice\" className=\"hide\">Share Link Copied!</div>\r\n\t\t\t\t\t\t\t\t<input id=\"shared_Input\" className=\"scr_rd\" type=\"text\" ></input>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t) : (null)\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div id=\"req_container\">\r\n\t\t\t\t\t<input id=\"req_input\" type=\"text\" placeholder=\"Stay Fleshy...\"/>\r\n\t\t\t\t\t<button id=\"clear_input\" onClick={this.clearInput}>X</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<button id=\"req_generate\" onClick={this.generate}>\r\n\t\t\t\t\tgenerate\r\n\t\t\t\t</button>\r\n\t\t\t\t\r\n\t\t\t\t<div id=\"fleshmonk_container\">\r\n\t\t\t\t\t<img id=\"fleshmonk_logo\" src={fleshmonk} alt=\"fleshmonk logo\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<List_Words wordList = {clips} addWord={this.addWord}></List_Words>\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n\t\r\n\tgenerate = () =>{\r\n\t\tlet query = this.getQuery();\r\n\t\tfetch(this.API_ADDRESS + \"generate/\" + query)\r\n\t\t  .then(res => res.json())\r\n\t\t  .then(\r\n\t\t\t(result) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisLoaded: true,\r\n\t\t\t\t\tgenerated: result.data\r\n\t\t\t\t});\r\n\t\t\t\tif(this.state.generated != null){\r\n\t\t\t\t\tlet audioContainer = document.getElementById(\"audioContainer\");\r\n\t\t\t\t\taudioContainer.classList.remove('hide');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t  this.setState({\r\n\t\t\t\tisLoaded: true,\r\n\t\t\t\terror\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  );\r\n\t\t\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tgetQuery = () =>{\r\n\t\tlet req_input = document.getElementById(\"req_input\");\r\n\t\tif(req_input != null){\r\n\t\t\tlet query = req_input.value.toLowerCase();\r\n\t\t\tquery = query.trim();\r\n\t\t\treturn query;\r\n\t\t}\r\n\t}\r\n\t\r\n\taddWord = (word) =>{\r\n\t\tconsole.log(\"add \" + word);\r\n\t\tlet req_input = document.getElementById(\"req_input\");\r\n\t\treq_input.value = req_input.value + \" \" + word;\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tclearInput = () =>{\r\n\t\tlet req_input = document.getElementById(\"req_input\");\r\n\t\treq_input.value = \"\";\r\n\t\tlet audioContainer = document.getElementById(\"audioContainer\");\r\n\t\taudioContainer.classList.add('hide');\r\n\t\t\r\n\t\tlet sounds = document.getElementsByClassName('audioPlayer');\r\n  \t\tfor(let i=0; i < sounds.length; i++){\r\n\t\t\tsounds[i].pause();\t\r\n\t\t} \r\n\t\t\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tplayAudio = (pairs) =>{\r\n\t\tlet players = []\r\n\t\tlet ids = []\r\n\t\tfor(let i = 0; i < pairs.length; i++){\r\n\t\t\t//audio_\" + this.props.word + \"_\" + this.props.index\r\n\t\t\tplayers.push(document.getElementById(\"audio_\" + Object.keys(pairs[i])[0]  + \"_\" + i));\r\n\t\t\tids.push(\"audio_\" + Object.keys(pairs[i])[0]  + \"_\" + i);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tfor(let i = 0; i < ids.length; i++){\r\n\t\t\tif(i+1 < ids.length){\r\n\t\t\t\tplayers[i].setAttribute(\"onEnded\", this.getNext(ids[i+1]));\r\n\t\t\t}\r\n\t\t}\r\n\t\tplayers[0].play();\r\n\t}\r\n\t\t\t\r\n\tgetNext = (id) =>{\r\n\t\tlet prefix = \"setTimeout(function(){ \";\r\n\t\tlet getEleStr = \"document.getElementById(\\\"\"\r\n\t\tlet postfix = \"\\\").play(); }, 50);\"\r\n\t\treturn prefix + getEleStr + id + postfix;\r\n\t}\r\n\t\r\n\tcopyShare = () =>{\r\n\t\tlet req_input = document.getElementById(\"req_input\");\r\n\t\tlet shared_input = document.getElementById(\"shared_Input\");\r\n\t\tlet shared_notice = document.getElementById(\"shared_Notice\");\r\n\t\tlet query = req_input.value;\r\n\t\tquery = query.replace(/ /g,',');\r\n\t\t\r\n\t\tquery =  window.location.href.split('?')[0] + \"?q=\" + query;\r\n\t\tshared_input.value = query\t;\t\t\r\n\t\tshared_input.select();\r\n\t\tshared_input.setSelectionRange(0, 99999); /*For mobile devices*/\r\n\t\tdocument.execCommand(\"copy\")\r\n\t\tshared_notice.classList.remove(\"hide\");\r\n\t\tshared_notice.classList.add(\"ani\");\r\n\t\tsetTimeout(function(){ shared_notice.classList.add(\"hide\");; }, 3000);\t\t\r\n\t}\r\n}\r\nexport default App_Main;\r\n","import React from 'react';\r\nimport '../scss/App.scss';\r\n\r\nvar state = {}\r\n\r\nclass App_Header extends React.Component {\r\n  \r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<header>\r\n\t\t\t\t<h1>fleshmonk sound board</h1>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App_Header;\r\n","import React from 'react';\nimport '../scss/App.scss';\nimport App_Main from './App_Main.jsx';\nimport App_Header from './App_Header.jsx';\n\nvar state = {}\n\nclass App extends React.Component {\n  \n\trender(){\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<App_Header/>\n\t\t\t\t<App_Main/>\n\t\t\t\t\n\t\t\t\t<footer>\n\t\t\t\t\t<img src=\"https://cdn4.iconfinder.com/data/icons/logos-3/600/React.js_logo-512.png\" alt=\"react logo\"/>\n\t\t\t\t\t<p>Made by Johnson Lu with React.js</p>\t\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}